var c=(o,s,n)=>{if(!s.has(o))throw TypeError("Cannot "+n)};var h=(o,s,n)=>(c(o,s,"read from private field"),n?n.call(o):s.get(o)),a=(o,s,n)=>{if(s.has(o))throw TypeError("Cannot add the same private member more than once");s instanceof WeakSet?s.add(o):s.set(o,n)};(function(o,s){typeof exports=="object"&&typeof module<"u"?module.exports=s():typeof define=="function"&&define.amd?define(s):(o=typeof globalThis<"u"?globalThis:o||self,o["sadrix-vue-form"]=s())})(this,function(){var i;"use strict";class o{constructor(){this.errors={}}has(r){return this.errors?!!this.errors[r]:!1}passed(){return Object.keys(this.errors).length===0&&this.errors.constructor===Object}set(r,t=[]){if(!t||t.length===0)this.errors=r;else for(let e in r)t.includes(e)&&(this.errors[e]=r[e])}get(r){return this.has(r)?typeof this.errors[r]=="array"?this.errors[r][0]:this.errors[r]:""}add(r){let t=new Object;t=Object.assign(this.errors,r),this.errors=t,console.log(this.errors)}clear(r){if(typeof r=="string")this.errors[r]=[];else if(typeof r=="array")r.forEach(t=>{this.errors[t]=[]});else return this.errors={}}}class s{constructor(r){a(this,i,[]);for(const[t,e]of Object.entries(r))["errors","__fields"].includes(t)||(this[t]=e,h(this,i).push(t));this.errors=new o}has(r){return h(this,i).includes(r)}get(r){return this.has(r)?this[r]:null}all(){let r={};return h(this,i).map(t=>{r[t]=this.get(t)}),r}only(r){let t={};return typeof r=="string"?t[r]=this.has(r)?this[r]:null:r.map(e=>{this.has(e)&&(t[e]=this.get(e))}),t}except(r){let t={};return h(this,i).map(e=>{typeof r=="string"&&(e!==r?t[e]=this.get(e):r.includes(e)||(t[e]=this.get(e)))}),t}}return i=new WeakMap,{install(u,r="Form"){try{r=r||"Form",u.config.globalProperties[`$${r}`]=s,window[r]=s}catch{console.warn("[Sadrix-Vue-Fomr]: propName is invalid: "+r)}}}});
